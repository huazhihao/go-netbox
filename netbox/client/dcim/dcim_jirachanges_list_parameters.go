// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 The go-netbox Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package dcim

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDcimJirachangesListParams creates a new DcimJirachangesListParams object
// with the default values initialized.
func NewDcimJirachangesListParams() *DcimJirachangesListParams {
	var ()
	return &DcimJirachangesListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDcimJirachangesListParamsWithTimeout creates a new DcimJirachangesListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDcimJirachangesListParamsWithTimeout(timeout time.Duration) *DcimJirachangesListParams {
	var ()
	return &DcimJirachangesListParams{

		timeout: timeout,
	}
}

// NewDcimJirachangesListParamsWithContext creates a new DcimJirachangesListParams object
// with the default values initialized, and the ability to set a context for a request
func NewDcimJirachangesListParamsWithContext(ctx context.Context) *DcimJirachangesListParams {
	var ()
	return &DcimJirachangesListParams{

		Context: ctx,
	}
}

// NewDcimJirachangesListParamsWithHTTPClient creates a new DcimJirachangesListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDcimJirachangesListParamsWithHTTPClient(client *http.Client) *DcimJirachangesListParams {
	var ()
	return &DcimJirachangesListParams{
		HTTPClient: client,
	}
}

/*DcimJirachangesListParams contains all the parameters to send to the API endpoint
for the dcim jirachanges list operation typically these are written to a http.Request
*/
type DcimJirachangesListParams struct {

	/*Assignee*/
	Assignee *string
	/*EndTime*/
	EndTime *string
	/*IDIn
	  Multiple values may be separated by commas.

	*/
	IDIn *string
	/*JiraLink*/
	JiraLink *string
	/*Limit
	  Number of results to return per page.

	*/
	Limit *int64
	/*Offset
	  The initial index from which to return the results.

	*/
	Offset *int64
	/*Q*/
	Q *string
	/*Site*/
	Site *string
	/*SiteID*/
	SiteID *string
	/*StartTime*/
	StartTime *string
	/*Status*/
	Status *string
	/*Summary*/
	Summary *string
	/*Type*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithTimeout(timeout time.Duration) *DcimJirachangesListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithContext(ctx context.Context) *DcimJirachangesListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithHTTPClient(client *http.Client) *DcimJirachangesListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAssignee adds the assignee to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithAssignee(assignee *string) *DcimJirachangesListParams {
	o.SetAssignee(assignee)
	return o
}

// SetAssignee adds the assignee to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetAssignee(assignee *string) {
	o.Assignee = assignee
}

// WithEndTime adds the endTime to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithEndTime(endTime *string) *DcimJirachangesListParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetEndTime(endTime *string) {
	o.EndTime = endTime
}

// WithIDIn adds the iDIn to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithIDIn(iDIn *string) *DcimJirachangesListParams {
	o.SetIDIn(iDIn)
	return o
}

// SetIDIn adds the idIn to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetIDIn(iDIn *string) {
	o.IDIn = iDIn
}

// WithJiraLink adds the jiraLink to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithJiraLink(jiraLink *string) *DcimJirachangesListParams {
	o.SetJiraLink(jiraLink)
	return o
}

// SetJiraLink adds the jiraLink to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetJiraLink(jiraLink *string) {
	o.JiraLink = jiraLink
}

// WithLimit adds the limit to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithLimit(limit *int64) *DcimJirachangesListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithOffset(offset *int64) *DcimJirachangesListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithQ adds the q to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithQ(q *string) *DcimJirachangesListParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetQ(q *string) {
	o.Q = q
}

// WithSite adds the site to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithSite(site *string) *DcimJirachangesListParams {
	o.SetSite(site)
	return o
}

// SetSite adds the site to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetSite(site *string) {
	o.Site = site
}

// WithSiteID adds the siteID to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithSiteID(siteID *string) *DcimJirachangesListParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetSiteID(siteID *string) {
	o.SiteID = siteID
}

// WithStartTime adds the startTime to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithStartTime(startTime *string) *DcimJirachangesListParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetStartTime(startTime *string) {
	o.StartTime = startTime
}

// WithStatus adds the status to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithStatus(status *string) *DcimJirachangesListParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetStatus(status *string) {
	o.Status = status
}

// WithSummary adds the summary to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithSummary(summary *string) *DcimJirachangesListParams {
	o.SetSummary(summary)
	return o
}

// SetSummary adds the summary to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetSummary(summary *string) {
	o.Summary = summary
}

// WithType adds the typeVar to the dcim jirachanges list params
func (o *DcimJirachangesListParams) WithType(typeVar *string) *DcimJirachangesListParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the dcim jirachanges list params
func (o *DcimJirachangesListParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *DcimJirachangesListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Assignee != nil {

		// query param assignee
		var qrAssignee string
		if o.Assignee != nil {
			qrAssignee = *o.Assignee
		}
		qAssignee := qrAssignee
		if qAssignee != "" {
			if err := r.SetQueryParam("assignee", qAssignee); err != nil {
				return err
			}
		}

	}

	if o.EndTime != nil {

		// query param endTime
		var qrEndTime string
		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := qrEndTime
		if qEndTime != "" {
			if err := r.SetQueryParam("endTime", qEndTime); err != nil {
				return err
			}
		}

	}

	if o.IDIn != nil {

		// query param id__in
		var qrIDIn string
		if o.IDIn != nil {
			qrIDIn = *o.IDIn
		}
		qIDIn := qrIDIn
		if qIDIn != "" {
			if err := r.SetQueryParam("id__in", qIDIn); err != nil {
				return err
			}
		}

	}

	if o.JiraLink != nil {

		// query param jira_link
		var qrJiraLink string
		if o.JiraLink != nil {
			qrJiraLink = *o.JiraLink
		}
		qJiraLink := qrJiraLink
		if qJiraLink != "" {
			if err := r.SetQueryParam("jira_link", qJiraLink); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Q != nil {

		// query param q
		var qrQ string
		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {
			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}

	}

	if o.Site != nil {

		// query param site
		var qrSite string
		if o.Site != nil {
			qrSite = *o.Site
		}
		qSite := qrSite
		if qSite != "" {
			if err := r.SetQueryParam("site", qSite); err != nil {
				return err
			}
		}

	}

	if o.SiteID != nil {

		// query param site_id
		var qrSiteID string
		if o.SiteID != nil {
			qrSiteID = *o.SiteID
		}
		qSiteID := qrSiteID
		if qSiteID != "" {
			if err := r.SetQueryParam("site_id", qSiteID); err != nil {
				return err
			}
		}

	}

	if o.StartTime != nil {

		// query param startTime
		var qrStartTime string
		if o.StartTime != nil {
			qrStartTime = *o.StartTime
		}
		qStartTime := qrStartTime
		if qStartTime != "" {
			if err := r.SetQueryParam("startTime", qStartTime); err != nil {
				return err
			}
		}

	}

	if o.Status != nil {

		// query param status
		var qrStatus string
		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {
			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}

	}

	if o.Summary != nil {

		// query param summary
		var qrSummary string
		if o.Summary != nil {
			qrSummary = *o.Summary
		}
		qSummary := qrSummary
		if qSummary != "" {
			if err := r.SetQueryParam("summary", qSummary); err != nil {
				return err
			}
		}

	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
